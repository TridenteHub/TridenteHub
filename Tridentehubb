-- Hub completo: Key + Painel (InfJump, Desync Body, FlyToBase, 3rd Floor, X-Ray) + minimizar animado
local KEY_CORRETA = "2026ROUBEUMBRAINROT"
local LINK_KEY = "https://rekonise.com/key-script-x-roube-um-brainrot-dvdwv" -- usado pelo botão GET KEY

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local RunService = RS

-- util
local function notify(title, text, dur)
	pcall(function()
		game.StarterGui:SetCore("SendNotification", {Title = title, Text = text, Duration = dur or 3})
	end)
end

-- salva objetos para restaurar
local XrayState = {active=false, originals={}}

-- cria tela de key
local function criarTelaKey()
	local gui = Instance.new("ScreenGui")
	gui.Name = "KeySystem"
	gui.ResetOnSpawn = false
	gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

	local main = Instance.new("Frame", gui)
	main.Size = UDim2.new(0,420,0,260)
	main.Position = UDim2.new(0.5,-210,0.5,-130)
	main.BackgroundColor3 = Color3.fromRGB(28,28,28)
	main.Active = true
	main.Draggable = true
	main.BorderSizePixel = 0

	local title = Instance.new("TextLabel", main)
	title.Size = UDim2.new(1,0,0,60)
	title.Position = UDim2.new(0,0,0,0)
	title.BackgroundTransparency = 1
	title.Text = "Digite sua Key"
	title.Font = Enum.Font.GothamBold
	title.TextSize = 26
	title.TextColor3 = Color3.fromRGB(255,255,255)

	local closeBtn = Instance.new("TextButton", main)
	closeBtn.Size = UDim2.new(0,36,0,36)
	closeBtn.Position = UDim2.new(1,-42,0,8)
	closeBtn.Text = "X"
	closeBtn.Font = Enum.Font.GothamBold
	closeBtn.TextColor3 = Color3.new(1,1,1)
	closeBtn.BackgroundColor3 = Color3.fromRGB(180,40,40)
	closeBtn.TextSize = 20
	closeBtn.MouseButton1Click:Connect(function()
		gui:Destroy()
	end)

	local box = Instance.new("TextBox", main)
	box.Size = UDim2.new(0.8,0,0,50)
	box.Position = UDim2.new(0.1,0,0.35,0)
	box.PlaceholderText = "Sua Key Aqui"
	box.Font = Enum.Font.Gotham
	box.TextSize = 20
	box.BackgroundColor3 = Color3.fromRGB(40,40,40)
	box.TextColor3 = Color3.fromRGB(1,1,1)

	local btnVerificar = Instance.new("TextButton", main)
	btnVerificar.Size = UDim2.new(0.44,-8,0,48)
	btnVerificar.Position = UDim2.new(0.05,0,0.75,0)
	btnVerificar.Text = "Verificar Key"
	btnVerificar.Font = Enum.Font.GothamBold
	btnVerificar.TextSize = 20
	btnVerificar.BackgroundColor3 = Color3.fromRGB(0,160,0)
	btnVerificar.TextColor3 = Color3.new(1,1,1)

	local btnGetKey = Instance.new("TextButton", main)
	btnGetKey.Size = UDim2.new(0.44,-8,0,48)
	btnGetKey.Position = UDim2.new(0.51,0,0.75,0)
	btnGetKey.Text = "GET KEY"
	btnGetKey.Font = Enum.Font.GothamBold
	btnGetKey.TextSize = 20
	btnGetKey.BackgroundColor3 = Color3.fromRGB(0,110,240)
	btnGetKey.TextColor3 = Color3.new(1,1,1)

	btnGetKey.MouseButton1Click:Connect(function()
		if setclipboard then
			pcall(function() setclipboard(LINK_KEY) end)
			notify("GET KEY", "Link copiado para o clipboard", 3)
		else
			notify("GET KEY", "Não foi possível copiar (setclipboard não suportado)", 3)
		end
	end)

	local labelMsg = Instance.new("TextLabel", main)
	labelMsg.Size = UDim2.new(1, -20, 0, 28)
	labelMsg.Position = UDim2.new(0,10,1,-38)
	labelMsg.BackgroundTransparency = 1
	labelMsg.TextColor3 = Color3.fromRGB(255,80,80)
	labelMsg.Font = Enum.Font.Gotham
	labelMsg.TextSize = 18
	labelMsg.Text = ""

	btnVerificar.MouseButton1Click:Connect(function()
		if box.Text == KEY_CORRETA then
			labelMsg.Text = ""
			gui:Destroy()
			task.wait(0.1)
			carregarMenu()
		else
			labelMsg.Text = "Key inválida"
			box.Text = ""
			notify("Erro", "Key inválida", 3)
		end
	end)
end

-- função util para procurar base do jogador (procura TextLabel "Base de <nome>")
local function encontrarMinhaBase()
	local meuNome = LocalPlayer.Name
	for _, m in ipairs(workspace:GetDescendants()) do
		if m:IsA("TextLabel") and m.Text:lower():find("base de") then
			local dono = m.Text:match("Base de%s*(.*)")
			if dono and dono:lower() == meuNome:lower() then
				-- retorna o model pai mais próximo
				local mdl = m
				while mdl and not mdl:IsA("Model") do
					mdl = mdl.Parent
				end
				if mdl then return mdl end
			end
		end
	end
	return nil
end

-- função para achar parte venda na base
local function encontrarParteVenda(baseModel)
	if not baseModel then return nil end
	for _, obj in ipairs(baseModel:GetDescendants()) do
		if obj:IsA("BasePart") and (string.find(obj.Name:lower(),"vende") or string.find(obj.Name:lower(),"venda") or string.find(obj.Name:lower(),"vendedor") or string.find(obj.Name:lower(),"vendor")) then
			return obj
		end
	end
	-- fallback: procurar parte frontal com nome "Sell" etc
	for _, obj in ipairs(baseModel:GetDescendants()) do
		if obj:IsA("BasePart") and (string.find(obj.Name:lower(),"sell") or string.find(obj.Name:lower(),"sellpart")) then
			return obj
		end
	end
	-- último recurso: retorna o primeiro BasePart do modelo
	for _, obj in ipairs(baseModel:GetDescendants()) do
		if obj:IsA("BasePart") then return obj end
	end
	return nil
end

-- cria menu principal
function carregarMenu()
	-- evita duplicar
	if LocalPlayer:FindFirstChild("PlayerGui") and LocalPlayer.PlayerGui:FindFirstChild("MainHub") then return end

	local gui = Instance.new("ScreenGui")
	gui.Name = "MainHub"
	gui.ResetOnSpawn = false
	gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

	local frame = Instance.new("Frame", gui)
	frame.Size = UDim2.new(0,420,0,420)
	frame.Position = UDim2.new(0.5,-210,0.5,-210)
	frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
	frame.Active = true
	frame.Draggable = true
	frame.BorderSizePixel = 0
	frame.Name = "MainFrame"

	-- minimizar azul fixo
	local minimizar = Instance.new("TextButton", gui)
	minimizar.Name = "MinimizarBtn"
	minimizar.Size = UDim2.new(0,60,0,60)
	minimizar.Position = UDim2.new(1,-80,0,20)
	minimizar.AnchorPoint = Vector2.new(1,0)
	minimizar.BackgroundColor3 = Color3.fromRGB(0,120,255)
	minimizar.Text = "—"
	minimizar.Font = Enum.Font.GothamBold
	minimizar.TextSize = 28
	minimizar.TextColor3 = Color3.new(1,1,1)
	minimizar.ZIndex = 50
	minimizar.Active = true
	minimizar.Draggable = false

	local minimized = false
	local originalSize = frame.Size

	local function tweenSize(obj, newSize, t)
		local ti = TweenInfo.new(t or 0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local tw = TweenService:Create(obj, ti, {Size = newSize})
		tw:Play()
		return tw
	end

	minimizar.MouseButton1Click:Connect(function()
		minimized = not minimized
		if minimized then
			tweenSize(frame, UDim2.new(0,80,0,80), 0.25)
			task.delay(0.25, function()
				for _,v in ipairs(frame:GetChildren()) do
					if v:IsA("TextButton") or v:IsA("TextLabel") then v.Visible = false end
				end
			end)
			minimizar.Text = "+"
		else
			tweenSize(frame, originalSize, 0.25)
			task.delay(0.25, function()
				for _,v in ipairs(frame:GetChildren()) do
					v.Visible = true
				end
			end)
			minimizar.Text = "—"
		end
	end)

	-- título
	local title = Instance.new("TextLabel", frame)
	title.Size = UDim2.new(1,0,0,60)
	title.Position = UDim2.new(0,0,0,0)
	title.BackgroundTransparency = 1
	title.Text = "SSX Hub - Painel"
	title.Font = Enum.Font.GothamBold
	title.TextSize = 26
	title.TextColor3 = Color3.fromRGB(255,255,255)

	-- helper criar botão
	local function criarBotao(txt, y)
		local b = Instance.new("TextButton", frame)
		b.Size = UDim2.new(0.9,0,0,52)
		b.Position = UDim2.new(0.05,0,0,y)
		b.BackgroundColor3 = Color3.fromRGB(45,45,45)
		b.Font = Enum.Font.GothamBold
		b.TextSize = 20
		b.TextColor3 = Color3.new(1,1,1)
		b.Text = txt
		return b
	end

	-- Inf Jump
	local infJump = false
	local btnJump = criarBotao("Inf Jump: OFF", 70)
	btnJump.MouseButton1Click:Connect(function()
		infJump = not infJump
		btnJump.Text = infJump and "Inf Jump: ON" or "Inf Jump: OFF"
	end)
	UIS.JumpRequest:Connect(function()
		if infJump then
			local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if hum then hum:ChangeState(Enum.HumanoidStateType.Jumping) end
		end
	end)

	-- Desync Body (usa clone do inventário)
	local btnDesync = criarBotao("Desync Body (usar clone)", 135)
	local desyncActive = false
	local cloneBackup = nil
	btnDesync.MouseButton1Click:Connect(function()
		-- mostra carregando
		local loadGui = Instance.new("Frame", frame)
		loadGui.Size = UDim2.new(0.9,0,0,60)
		loadGui.Position = UDim2.new(0.05,0,0,200)
		loadGui.BackgroundColor3 = Color3.fromRGB(20,20,20)
		local l = Instance.new("TextLabel", loadGui)
		l.Size = UDim2.new(1,0,1,0)
		l.BackgroundTransparency = 1
		l.Text = "Carregando..."
		l.Font = Enum.Font.Gotham
		l.TextSize = 20
		l.TextColor3 = Color3.new(1,1,1)

		task.spawn(function()
			-- procura clone no Backpack (inventário local)
			local backpack = LocalPlayer:FindFirstChildOfClass("Backpack")
			local candidate = nil
			if backpack then
				for _, item in ipairs(backpack:GetChildren()) do
					if item:IsA("Model") or item:IsA("Tool") then
						local n = item.Name:lower()
						-- tenta nomes prováveis
						if n:find("clone") or n:find("body") or n:find("desync") or n:find("model") then
							candidate = item
							break
						end
					end
				end
			end
			task.wait(0.6)
			if not candidate then
				-- tenta StarterPack
				local sp = game:GetService("StarterPack")
				for _, item in ipairs(sp:GetChildren()) do
					local n = item.Name:lower()
					if n:find("clone") or n:find("body") or n:find("desync") or n:find("model") then
						candidate = item
						break
					end
				end
			end

			if not candidate then
				l.Text = "Clone não encontrado no inventário!"
				notify("Desync Body", "Clone não encontrado no inventário!", 4)
				task.wait(2)
				pcall(function() loadGui:Destroy() end)
				return
			end

			-- tenta clonar e substituir o corpo
			local success, err = pcall(function()
				-- se for Tool, tenta clonar seu modelo
				local cloned = candidate:Clone()
				cloneBackup = cloned
				cloned.Parent = workspace
				-- deixa o personagem invisível (esconde partes)
				local char = LocalPlayer.Character
				if char then
					for _, part in ipairs(char:GetDescendants()) do
						if part:IsA("BasePart") then
							part.Transparency = 1
							part.CanCollide = false
						elseif part:IsA("Decal") then
							part.Transparency = 1
						end
					end
				end
				desyncActive = true
			end)
			if success then
				l.Text = "Desync ativo (clonou). Você está invisível."
				notify("Desync Body", "Desync aplicado", 3)
			else
				l.Text = "Erro ao usar clone: "..tostring(err)
				notify("Desync Body", "Erro ao aplicar clone", 4)
			end
			task.wait(2)
			pcall(function() loadGui:Destroy() end)
		end)
	end)

	-- Fly to Base
	local btnFly = criarBotao("Fly to Base", 225)
	btnFly.MouseButton1Click:Connect(function()
		local base = encontrarMinhaBase()
		if not base then
			notify("Fly to Base", "Sua base não foi encontrada!", 4)
			return
		end
		-- find top part (highest Y) within base
		local topPart = nil
		local topY = -1/0
		for _, part in ipairs(base:GetDescendants()) do
			if part:IsA("BasePart") then
				if part.Position.Y > topY then
					topY = part.Position.Y
					topPart = part
				end
			end
		end
		local vendaPart = encontrarParteVenda(base)
		local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		if not hrp then notify("Fly to Base","Seu HumanoidRootPart não encontrado",4); return end
		-- tween até acima do teto (topPart) + offset
		local target = (topPart and topPart.CFrame) or hrp.CFrame
		local above = target + Vector3.new(0, 10, 0)
		local tinfo = TweenInfo.new(1.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local tw = TweenService:Create(hrp, tinfo, {CFrame = CFrame.new(above.Position)})
		tw:Play()
		tw.Completed:Wait()
		-- descer até vendaPart (ou ficar 3 studs acima se não achar)
		local downTarget = vendaPart and (vendaPart.CFrame + Vector3.new(0,3,0)) or (topPart and (topPart.CFrame + Vector3.new(0, -1, 0))) or hrp.CFrame
		local tw2 = TweenService:Create(hrp, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = CFrame.new(downTarget.Position)})
		tw2:Play()
		notify("Fly to Base", "Chegou à base", 4)
	end)

	-- 3rd Floor (cria plataforma sob o player)
	local btn3rd = criarBotao("3rd Floor (spawn platform)", 290)
	local platform = nil
	btn3rd.MouseButton1Click:Connect(function()
		local char = LocalPlayer.Character
		local hrp = char and char:FindFirstChild("HumanoidRootPart")
		if not hrp then notify("3rd Floor","HumanoidRootPart não encontrado",3); return end
		-- criar parte acima do chão do player (1.5 studs abaixo do Hrp)
		if platform and platform.Parent then platform:Destroy() end
		platform = Instance.new("Part", workspace)
		platform.Size = Vector3.new(6,0.5,6)
		platform.Anchored = true
		platform.CanCollide = true
		platform.Transparency = 0.25
		platform.CFrame = hrp.CFrame * CFrame.new(0, -3.5, 0)
		platform.Name = "SSX_3rdFloor_Platform"
		notify("3rd Floor", "Plataforma criada", 3)
	end)

	-- X-Ray Base
	local btnXray = criarBotao("X-Ray Base: OFF", 350)
	local xrayOn = false
	btnXray.MouseButton1Click:Connect(function()
		xrayOn = not xrayOn
		btnXray.Text = xrayOn and "X-Ray Base: ON" or "X-Ray Base: OFF"
		if xrayOn then
			-- salvar transparências originais e aplicar
			XrayState.active = true
			XrayState.originals = {}
			for _, m in ipairs(workspace:GetDescendants()) do
				if m:IsA("Model") and m.Name:lower():find("base") then
					for _, p in ipairs(m:GetDescendants()) do
						if p:IsA("BasePart") then
							XrayState.originals[p] = p.Transparency
							p.Transparency = math.clamp(p.Transparency + 0.5, 0, 0.9)
						end
					end
				end
			end
			-- highlight brainrots (procura por objetos com "brainrot" no nome)
			for _, obj in ipairs(workspace:GetDescendants()) do
				if obj:IsA("BasePart") and obj.Name:lower():find("brainrot") then
					if not obj:FindFirstChild("BR_Highlight") then
						local hl = Instance.new("Highlight")
						hl.Name = "BR_Highlight"
						hl.Adornee = obj
						hl.Parent = obj
						hl.FillColor = Color3.fromRGB(255,180,0)
						hl.OutlineColor = Color3.fromRGB(255,255,255)
						hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
					end
				end
			end
			notify("X-Ray", "Bases tornadas semi-transparentes", 4)
		else
			-- restaurar
			for p,orig in pairs(XrayState.originals) do
				if p and p.Parent then
					p.Transparency = orig
				end
			end
			XrayState.originals = {}
			-- remover highlights de brainrots
			for _, h in ipairs(workspace:GetDescendants()) do
				if h:IsA("Highlight") and h.Name == "BR_Highlight" then
					pcall(function() h:Destroy() end)
				end
			end
			XrayState.active = false
			notify("X-Ray", "Restaurado", 3)
		end
	end)

	-- fim menu
	notify("SSX Hub", "Menu carregado", 3)
end

-- inicia o fluxo
criarTelaKey()

-- certifica que GUI não suma ao spawn
LocalPlayer.CharacterAdded:Connect(function(char)
	-- espera um pouquinho e reaplica ResetOnSpawn GUIs (se houver)
	task.wait(0.25)
	-- nada extra necessário — os GUIs criados com ResetOnSpawn=false persistem automaticamente
end)
